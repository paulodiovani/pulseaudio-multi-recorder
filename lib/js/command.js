// Generated by CoffeeScript 1.7.1
(function() {
  var Command, PulseAudio;

  PulseAudio = require('pulseaudio');


  /*
   * Command class
   * Run pulseaudio commands
   */

  Command = (function() {
    function Command() {
      this.context = new PulseAudio({
        client: 'pulseaudio-multi-recorder'
      });
    }


    /*
     * List the active sinks
     * @param callback function to execute after the method finish,
     *   receive the context as argument.
     *   If no callback is provided, end the context.
     */

    Command.prototype.list_sinks = function(callback) {
      var me;
      me = this;
      this.context.on('connection', function() {
        return me.context.sink(me._onlist.bind(me, callback));
      });
      return this;
    };

    Command.prototype.list_sources = function(callback) {
      var me;
      me = this;
      this.context.on('connection', function() {
        return me.context.source(me._onlist.bind(me, callback));
      });
      return this;
    };

    Command.prototype._onlist = function(callback, list) {
      console.log(list);
      if (typeof callback === 'function') {
        return callback.call(this.context);
      } else if (callback == null) {
        return this.context.end();
      }
    };

    return Command;

  })();

  module.exports = new Command();

}).call(this);
