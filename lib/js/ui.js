// Generated by CoffeeScript 1.7.1
(function() {
  var Ui, blessed, command, screen;

  command = require('./command');

  blessed = require('blessed');

  screen = blessed.screen();

  Ui = (function() {

    /*
     * The app title that should appear on body
     */
    Ui.prototype.title = "Pulseaudio Multi Recorder";


    /*
     * Main app body
     */

    Ui.prototype.body = null;

    function Ui() {
      screen.key(['escape', 'q', 'C-c'], function(ch, key) {
        return process.exit(0);
      });
      this.body = blessed.box({
        top: 0,
        left: 'center',
        width: '100%',
        height: '100%',
        tags: true,
        border: {
          type: 'line'
        }
      });
      this.set_body_content("");
      screen.append(this.body);
    }


    /*
     * Start the application
     */

    Ui.prototype.start = function() {
      this.actions_menu();
      return this;
    };


    /*
     * Set the body (text) content, keeping the title
     * @param {String} text
     */

    Ui.prototype.set_body_content = function(text) {
      this.body.setContent("{center} {bold}" + this.title + "{/bold}\n\n " + text + " {/center}");
      return this;
    };


    /*
     * Show the main, actions menu
     */

    Ui.prototype.actions_menu = function() {
      var menu, menu_items;
      menu_items = ['List sinks', 'List sink inputs', 'List sources', 'List source outputs', 'Record audio from source'];
      menu = blessed.list({
        keys: true,
        mouse: true,
        align: 'center',
        top: 4,
        left: 'center',
        width: 50,
        height: 7,
        border: {
          type: 'line'
        },
        style: {
          selected: {
            inverse: true
          }
        },
        scrollbar: {
          ch: ' ',
          style: {
            inverse: true
          }
        },
        items: menu_items
      });
      menu.prepend(blessed.text({
        top: -1,
        left: 'center',
        content: 'Main menu'
      }));
      menu.on('select', this.on_action_selected);
      this.body.append(menu);
      menu.focus();
      menu.select(0);
      screen.render();
      return this;
    };

    Ui.prototype.on_action_selected = function(item, index) {
      return console.log(index);
    };

    return Ui;

  })();

  module.exports = new Ui();

}).call(this);
