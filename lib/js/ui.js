// Generated by CoffeeScript 1.7.1
(function() {
  var Ui, blessed, command, screen,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  command = require('./command');

  blessed = require('blessed');

  screen = blessed.screen();

  Ui = (function() {

    /*
     * The app title that should appear on body
     */
    Ui.prototype.title = "Pulseaudio Multi Recorder";


    /*
     * Main app body
     */

    Ui.prototype.body = null;


    /*
     * Main app menu
     */

    Ui.menu = null;

    function Ui() {
      this.action_list = __bind(this.action_list, this);
      this.on_action_selected = __bind(this.on_action_selected, this);
      screen.key(['escape', 'q', 'C-c'], function(ch, key) {
        return process.exit(0);
      });
      this.body = blessed.box({
        parent: screen,
        top: 0,
        left: 'center',
        width: '100%',
        height: '100%',
        tags: true,
        border: {
          type: 'line'
        },
        content: "{center}{bold}" + this.title + "{/bold}{/center}"
      });
    }


    /*
     * Start the application
     */

    Ui.prototype.start = function() {
      this.actions_menu();
      return this;
    };


    /*
     * Show the main, actions menu
     */

    Ui.prototype.actions_menu = function() {
      var menu_items;
      menu_items = ['List sinks', 'List sink inputs', 'List sources', 'List source outputs', 'Record audio from source', 'Exit'];
      this.menu = blessed.list({
        parent: this.body,
        keys: true,
        mouse: true,
        align: 'center',
        top: 4,
        left: 'center',
        width: 50,
        height: 8,
        border: {
          type: 'line'
        },
        style: {
          selected: {
            inverse: true
          }
        },
        scrollbar: {
          ch: ' ',
          style: {
            inverse: true
          }
        },
        items: menu_items
      });
      this.menu.prepend(blessed.text({
        top: 0,
        left: 'center',
        content: 'Main menu'
      }));
      this.menu.on('select', this.on_action_selected);
      this.menu.focus();
      screen.render();
      return this;
    };


    /*
     * Callback for main menu item selected
     */

    Ui.prototype.on_action_selected = function(item, index) {
      switch (index) {
        case 0:
          return command.list_sinks(this.action_list);
        case 2:
          return command.list_sources(this.action_list);
        case 5:
          return process.exit(0);
      }
    };


    /*
     * Action list items (sinks, sources, etc)
     * @param {String} err
     * @param {Object[]} data
     */

    Ui.prototype.action_list = function(err, data) {
      var content, listbox, okbutton;
      if (err) {
        this.render_error(err);
        return;
      }
      content = "";
      data.forEach(function(it) {
        return content = content.concat("" + it.index + " - " + it.description + "\n");
      });
      listbox = blessed.box({
        parent: this.body,
        top: 'center',
        left: 'center',
        width: '80%',
        height: '50%',
        tags: true,
        border: {
          type: 'line'
        },
        scrollbar: {
          ch: ' ',
          style: {
            inverse: true
          }
        },
        content: content
      });
      okbutton = blessed.button({
        parent: listbox,
        keys: true,
        mouse: true,
        bottom: 1,
        left: 'center',
        shrink: true,
        padding: {
          left: 1,
          right: 1
        },
        style: {
          inverse: true,
          hover: {
            inverse: false
          }
        },
        content: 'Ok'
      });
      okbutton.on('press', (function(_this) {
        return function() {
          listbox.detach();
          _this.menu.focus();
          return screen.render();
        };
      })(this));
      okbutton.focus();
      return screen.render();
    };

    return Ui;

  })();

  module.exports = new Ui();

}).call(this);
